package pages;

import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;

import common.Constant;
import joomla.AbstractPage;
import joomla.ContactManagerPage;


public class ContactManagerPageAction extends AbstractPageAction{
	WebDriver driver;
	
	public ContactManagerPageAction (WebDriver driver){
		this.driver = driver;
		
	}
	
	/**
	 * Check the checkbox of a Contact title 
	 * @param driver
	 * @param title
	 */
	
	public void selectAnContact(WebDriver driver,String title){
		//click (driver, ContactsManagerPage.colTitle);
		dependableWaitForControl(driver, By.xpath(String.format(ContactManagerPage.dynamicchkContactRow, title)), Constant.LONG_TIME);
		click(driver, By.xpath(String.format(ContactManagerPage.dynamicchkContactRow, title)));
		sleep(1);
		
	}
	
	/**
	 * Search a contact on Contact tables by title
	 * @param driver
	 * @param title
	 */
	public void searchContactByTitle(WebDriver driver, String title){
		enterText(driver,ContactManagerPage.txtContactSearch, title);
		click (driver,ContactManagerPage.btnContactSearch);
		
	}
	
	/**
	 * Select item of the 'Display' dropdown list at the footer section of the
	 * table
	 * 
	 * @param driver
	 * @param numberOfItems
	 */
	public void selectNumberOfContactDisplay(WebDriver driver, String numberOfItems) {
		String currentNumberOfItemDisplay = driver.findElement(ContactManagerPage.ddlNumberContactDisplay).getText();
		if (numberOfItems != currentNumberOfItemDisplay) {
			click(driver, ContactManagerPage.ddlNumberContactDisplay);
			click(driver, By.xpath(String.format(ContactManagerPage.dynamicNumberContactDisplay, numberOfItems)));
		}
	}
	
	/**
	 * Get index of contact based on its title
	 * @param driver
	 * @param title
	 * @return
	 */

	public int getContactIndexOfTitle(WebDriver driver, String title) {
		int i;
		WebElement table = driver.findElement(AbstractPage.tblTable);
		List<WebElement> rows = table.findElements(AbstractPage.rowsTable);
		int colID = rows.get(2).findElements(By.xpath("td")).size() - 5;
		for (i = 2; i < rows.size() - 1; i++) {
			String getTitle = rows.get(i).findElements(By.xpath("td")).get(colID).getText();
			if (getTitle.contains(title)) {
				break;
			}
		}
		return i;
	}
	
	
	/**
	 * Delete a contact on Contact table
	 * @param driver
	 * @param searchOption
	 * @param title
	 */
	
	public void deleteContact(WebDriver driver, String searchOption, String title) {
		if (searchOption.toLowerCase().equals("yes")) {
			searchContactByTitle(driver, title);
		}
		selectAnContact(driver, title);
		click(driver, AbstractPage.btnTrash);
	}
	
	/**
	 * Select Search Tools
	 * @param driver
	 * @param status
	 * @param category
	 * @param access
	 * @param language
	 * @param tag
	 */
	public void selectSearchTools(WebDriver driver, String status, String category, String access, String language, String tag, String maxlevels) {
		clearSearchTools(driver);
		click(driver, ContactManagerPage.btnContactSearchTools);
		if (status != null) {
			selectDropDownList(driver, ContactManagerPage.ddlStatus, status, "contains");
		}
		if (category != null) {
			selectDropDownList(driver, ContactManagerPage.ddlCategory, category, "contains");
		}

		if (access != null) {
			selectDropDownList(driver, ContactManagerPage.ddlAccess, access, "contains");
		}

		if (language != null) {
			selectDropDownList(driver, ContactManagerPage.ddlLanguage, language, "contains");
		}

		if (tag != null) {
			selectDropDownList(driver, ContactManagerPage.ddlTag, tag, "contains");
		}
		
		if (maxlevels != null) {
			selectDropDownList(driver, ContactManagerPage.ddlMaxLevels, maxlevels, "contains");
		}
	}
	
	
	/**
	 * Verify the created contact is displayed on the contacts table
	 * @param driver
	 * @param dynamiclnkContactTitle
	 * @param title
	 * @return
	 */
	
	public Boolean verifyContactDisplayed (WebDriver driver, String title){
		searchContactByTitle (driver, title);
		return (isControlDisplayed(driver, By.xpath(String.format(ContactManagerPage.dynamiclnkContact, title))));
			
	}
	
	/**
	 * Verify checkouted icon of contact displays
	 * @param driver
	 * @param title
	 * @param checkinstatus
	 * @return
	 */

	public boolean verifyCheckoutIconDisplayed(WebDriver driver, String title) {
		return (isControlDisplayed(driver, By.xpath(String.format(ContactManagerPage.dynamicbtnCheckoutStatus, title))));
	}
	
	/**
	 * The first item changes its position with the second item after ordering
	 * 
	 * @param driver
	 * @param firstIem
	 * @param secondItem
	 * @return
	 */

	public boolean verifyContactSortInOrdering(WebDriver driver, String firstItem, String secondItem) {
		selectNumberOfContactDisplay(driver, "All");
		int firstIndex = getContactIndexOfTitle(driver, firstItem);
		int secondIndex = getContactIndexOfTitle(driver, secondItem);
		clickHeaderLinkOfOrdering (driver);
		int firstIndex1 = getContactIndexOfTitle(driver, firstItem);
		int secondIndex1 = getContactIndexOfTitle(driver, secondItem);
		if (firstIndex > secondIndex) {
			if (firstIndex1 < secondIndex1) {
				return true;
			}
			return false;
		}
		if (firstIndex1 > secondIndex1) {
			return true;
		}
		return false;
	}
	
	/**
	 * Verify the status of Contact in each row is correct or not
	 * @param driver
	 * @param status
	 * @param noRow
	 * @return
	 */
	
	public boolean isStatusCorrectByRow(WebDriver driver, String status, int noRow) {
		return isDynamicControlDisplayed(driver, ContactManagerPage.dynamicbtnContactSatus, noRow + "", status);
	}
	
	/**
	 * Verify the category info of Contact in each row is correct or not
	 * @param driver
	 * @param category
	 * @param noRow
	 * @return
	 */
	
	public boolean isCategoryCorrectByRow(WebDriver driver, String category, int noRow) {
		return isDynamicControlDisplayed(driver, ContactManagerPage.dynamicContactCategory, noRow + "", category);
	}
	
	/**
	 * Verify the contacts are filtered based on the Search Tools option correctly or not 
	 * @param status
	 * @param category
	 * @return
	 */
	
	public boolean verifySearchToolsFilterCorrect(WebDriver driver, String status, String category) {
		int count = 0;
		if (isControlDisplayed(driver, ContactManagerPage.rowContact)) {
			List<WebElement> rows = driver.findElements(ContactManagerPage.rowContact);
			for (int i = 1; i <= rows.size(); i++) {
				if (isStatusCorrectByRow(driver, status, i)) count++;
				if (isCategoryCorrectByRow(driver, category, i)) count++;
			}
			if(count == (rows.size() * 2)) return true;
		}
		return false;
	}

		
	
	
}
