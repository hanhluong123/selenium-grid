package category;

import org.openqa.selenium.WebDriver;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Parameters;
import org.testng.annotations.Test;

import pages.LoginPageAction;
import pages.CategoryPageAction;
import pages.CategoryManagerPageAction;
import common.AbstractTest;
import common.CommonActions;
import common.Constant;
import joomla.CategoryPage;

public class JoomlaCategory_004 extends AbstractTest {
	WebDriver driver;

	@BeforeClass
	@Parameters({ "browser", "port", "ip" })
	public void SETUP(String browser, String port, String ip) {
		driver = openBrowser(driver, browser, ip, port);
		log.info("Step1: Navigate to the URL: http://ltrc.automationvids.com/administrator/");
		navigateBrowser(driver, url);
		loginPage = new LoginPageAction(driver);
		categoryPage = new CategoryPageAction(driver);
		categoryManagerPage = new CategoryManagerPageAction(driver);
	}

	@Test(description = "Verify that user can cancel adding action while adding a new create")
	public void RUN_01_TC_JOOMLA_CATEGORY_012() {
		log.info("Step 1: Navigate Joomla login page");
		log.info("Step 2: Login with User Name : 'lctp' and password : 'lctp'");
		log.info("Step 3: Click 'Login in' button");
		log.info("Step 4: Select Content -> Categories ");
		categoryPage.selectMenuItems2(driver, Constant.MENUITEM_CONTENT, Constant.MENUITEM_CATEGORIES);
		
		log.info("Step 5: Click 'New' button in the right top corner");
		log.info("Step 6: Enter valid Title Name to Title Name textbox");
		log.info("Step 7: Click 'Cancel' button");
		categoryPage.addNewCategory(driver, title, Constant.BUTTON_CANCEL);
		
		log.info("VP 1: Category Manager' page displays and category is not added to data");
		verifyTrue(categoryPage.verifyPageDisplayed(driver, Constant.TITLE_CATEGORY_MANAGER, false));
		verifyFalse(categoryManagerPage.verifyCategoryDisplayed(driver, Constant.SEARCH_STATUS_YES, title));
	}
	
	@Test(description = "Verify that user can creat a new category by using 'Save as Copy' button")
	public void RUN_02_TC_JOOMLA_CATEGORY_013() {
		log.info("Step 1: Navigate Joomla login page");
		log.info("Step 2: Login with User Name : 'lctp' and password : 'lctp'");
		log.info("Step 3: Click 'Login in' button");
		log.info("Step 4: Select Content -> Categories ");
		log.info("Step 5: Click 'New' button in the right top corner");
		log.info("Step 6: Enter valid Title Name to Title Name textbox");
		log.info("Step 7: Click 'Save' button");
		categoryPage.addNewCategory(driver, title, Constant.BUTTON_SAVE);
		
		log.info("VP 1: A message : 'Category successfully saved' shows and 'Edit an Aritical Category' page displays");
		verifyTrue(categoryPage.verifyMessageDisplayed(driver, expectedSaveMessage));
		verifyTrue(categoryPage.verifyPageDisplayed(driver, Constant.TITLE_CATEGORY_EDIT, false));
		
		log.info("Step 9: Enter valid Title Name to Title Name textbox");
		log.info("Step 10: Click 'Save as Copy' button");
		categoryPage.editCurrentCategory(driver, titleUpdate, Constant.BUTTON_SAVEASCOPY);
		
		log.info("VP 11: _ A message : 'Category successfully saved' shows");
		verifyTrue(categoryPage.verifyMessageDisplayed(driver, expectedSaveMessage));
		
		log.info("Step 12: Click 'Close' button");
		categoryPage.clickToolbarButton(driver, Constant.BUTTON_CLOSE);
		
		log.info("VP 13: _ A new category is created without replacing the old client");
		verifyFalse(categoryManagerPage.verifyCategoryDisplayed(driver, Constant.SEARCH_STATUS_YES, title));
		verifyFalse(categoryManagerPage.verifyCategoryDisplayed(driver, Constant.SEARCH_STATUS_YES, titleUpdate));
	}

	@Test(description = "Verify that user can copy may articles to another category")
	public void RUN_03_TC_JOOMLA_CATEGORY_015() {
		log.info("Step2: Enter valid username into Username field and valid password into Password field");
		log.info("Step3: Click on 'Log in' button");
		loginPage.loginToJoomla(driver, username, password);
		
		log.info("Step4: Select Content > Category Manager");
		categoryManagerPage.selectMenuItems2(driver, Constant.MENUITEM_CONTENT, Constant.MENUITEM_CATEGORIES);

		log.info("Step5: Click on 'New' icon of the top right toolbar");
		log.info("Step6: Enter a title on 'Title' field");
		log.info("Step7: Select an item from the 'Category' dropdown list");
		log.info("Step8: Select 'Published' item from 'Status' dropdown list");
		log.info("Step9: Enter value on 'Category Text' text area");
		log.info("Step10: Click on 'Save & Close' icon of the top right toolbar");
		categoryPage.addNewCategory(driver, titleUpdate, category, status, null, categoryText, Constant.BUTTON_SAVEANDCLOSE);

		log.info("Step 11: Check on the recently added category's checkbox");
		log.info("Step 12: Click on the status icon of the selected category in the Status column");
		categoryManagerPage.changeCategoryStatus(driver, titleUpdate, Constant.ICON_PUBLISH);
		
		log.info("Verify the category is unpublished successfully");
		log.info("VP1: The icon of the selected item is showed as 'Unpublish'");
		verifyTrue(categoryManagerPage.verifyStatusOfCategory(driver, titleUpdate, Constant.ICON_UNPUBLISH));
		
		log.info("VP2:The '1 category unpublished' message is displayed");
		verifyTrue(categoryManagerPage.verifyMessageDisplayed(driver, expectedUnpublishMessage));
		
		log.info("Step 13: Check on the recently added category's checkbox");
		log.info("Step 14: Click on the status icon of the selected category in the Status column");
		categoryManagerPage.changeCategoryStatus(driver, titleUpdate, Constant.ICON_UNPUBLISH);
		
		log.info("Verify the category is unpublished successfully");
		log.info("VP3: The icon of the selected item is showed as 'Unpublish'");
		verifyTrue(categoryManagerPage.verifyStatusOfCategory(driver, titleUpdate, Constant.ICON_PUBLISH));
		
		log.info("VP4:The '1 category unpublished' message is displayed");
		verifyTrue(categoryManagerPage.verifyMessageDisplayed(driver, expectedPublishMessage));
	}

	@Test(description = "Verify that user cannot create a new Category without entering the title of the category")
	public void RUN_04_TC_JOOMLA_CATEGORY_017() {
		log.info("Step 1: Navigate Joomla login page");
		log.info("Step 2: Login with User Name : 'lctp' and password : 'lctp'");
		log.info("Step 3: Click 'Login in' button");
		log.info("Step 4: Select Content -> Categories ");
		log.info("Step 5: Click 'New' button in the right top corner");
		log.info("Step 7: Click 'Save & Close' button");
		categoryPage.addNewCategory(driver, Constant.BLANK_STRING, Constant.BUTTON_SAVEANDCLOSE);
 
		log.info("VP 8: _ The color of Title textbox changes to red _ New category is not created");
		verifyTrue(categoryPage.verifyBorderColor(driver, CategoryPage.txtCategoryTitle, Constant.COLOR_RED));
		verifyTrue(categoryManagerPage.verifyMessageDisplayed(driver, expectedErrorMessage));
	}
	
	@AfterClass
	public void CLEAN() {
		closeBrowser(driver);
	}

	/* Initialize Objects */
	LoginPageAction loginPage;
	CategoryPageAction categoryPage;
	CategoryManagerPageAction categoryManagerPage;

	/* Class Variables */
	String url = CommonActions.readDataFromXML("url");
	String username = CommonActions.readDataFromXML("user");
	String password = CommonActions.readDataFromXML("pass");
	String title = Constant.TEAM_PREFIX + CommonActions.readDataFromJson("JoomlaCategory_004", "title")  + " " +CommonActions.getDateTime() + " " + CommonActions.generateRandomNumber();
	String titleUpdate = Constant.TEAM_PREFIX + CommonActions.readDataFromJson("JoomlaCategory_001", "titleUpdate")  + " " +CommonActions.getDateTime() + " " + CommonActions.generateRandomNumber();
	String category = CommonActions.readDataFromJson("JoomlaCategory_004", "category");
	String status = CommonActions.readDataFromJson("JoomlaCategory_004", "status");	
	String categoryText = CommonActions.readDataFromJson("JoomlaCategory_004", "categoryText");
	String expectedSaveMessage = "Category successfully saved.";
	String expectedUnpublishMessage = "";
	String expectedPublishMessage = "";
	String expectedTrashMessage = "1 category successfully trashed.";
	String expectedErrorMessage = "Invalid field:  Title";
	String search_status = CommonActions.readDataFromJson("JoomlaCategory_004", "search_status");

}