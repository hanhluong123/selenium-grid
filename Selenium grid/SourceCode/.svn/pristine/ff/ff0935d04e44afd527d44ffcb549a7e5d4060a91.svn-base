package category;

import org.openqa.selenium.WebDriver;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.AfterClass;
import org.testng.annotations.Parameters;
import org.testng.annotations.Test;

import common.AbstractTest;
import common.CommonActions;
import common.Constant;
import common.JsonHelper;
import pages.LoginPageAction;
import pages.CategoryPageAction;
import pages.CategoryManagerPageAction;


public class JoomlaCategory_002 extends AbstractTest {

	@BeforeClass
	@Parameters({"browser","ip","port"})
	public void SETUP(String browser, String ip, String port) {

		driver = openBrowser(driver, browser, ip, port);
		loginPage = new LoginPageAction(driver);
		categoryPage = new CategoryPageAction(driver);
		categoryManagerPage = new CategoryManagerPageAction (driver);
				
		navigateBrowser(driver, url);
		loginPage.loginToJoomla(driver, username, password);

	}

	
	@Test(description= "Verify that user can publish a category")
	public void RUN_01_TC_JOOMLA_CATEGORY_003() {
		log.info("Step 1: Navigate to the URL: http://ltrc.automationvids.com/administrator/");
		log.info("Step 2: Enter valid username into Username field");
		log.info("Step 3: Enter valid password into Password field");
		log.info("Step 4: Click on 'Log in' button");
		log.info("Step 6: Click on 'New' icon of the top right toolbar");
		log.info("Step 7: Enter a title on 'Title' field");
		log.info("Step 8: Select an item from the 'Category' dropdown list");
		log.info("Step 9: Select 'Unpublished' item from 'Status' dropdown list");
		log.info("Step 10: Enter value on 'Category Text' text area");
		log.info("Step 11: Check on the recently added category's checkbox");
		categoryManagerPage.selectAnCategory(driver, title);
		
		log.info("Step 12: Click on 'Publish' icon of the top right toolbar");
		categoryManagerPage.clickToolbarButton(driver,Constant.BUTTON_PUBLISH);
		
		log.info("VP1: Verify the category is published successfully "); 
		verifyTrue(categoryManagerPage.verifyMessageDisplayed (driver,publishCategorySuccessfulMessage));
		
		log.info("VP2: The icon of the selected item is showed as 'Publish'");
		verifyTrue(categoryManagerPage.verifyStatusOfCategory(driver, title, Constant.ICON_PUBLISH));
		
	}
	@Test(description= "Verify that user can unpublish a category")
	public void RUN_02_TC_JOOMLA_CATEGORY_004() {
		log.info("Step 1: Navigate to the URL: http://ltrc.automationvids.com/administrator/");
		log.info("Step 2: Enter valid username into Username field");
		log.info("Step 3: Enter valid password into Password field");
		log.info("Step 4: Click on 'Log in' button");
		log.info("Step 6: Click on 'New' icon of the top right toolbar");
		log.info("Step 7: Enter a title on 'Title' field");
		log.info("Step 8: Select an item from the 'Category' dropdown list");
		log.info("Step 9: Select 'Published' item from 'Status' dropdown list");
		log.info("Step 10: Enter value on 'Category Text' text area");
		log.info("Step 11: Check on the recently added category's checkbox");
		categoryManagerPage.selectAnCategory (driver, title);
		
		log.info("Step 14: Click on 'Unpublish' icon of the top right toolbar");
		categoryManagerPage.clickToolbarButton(driver,Constant.BUTTON_UNPUBLISH);
		
		log.info("VP1: Verify the category is unpublished successfully "); 
		verifyTrue(categoryManagerPage.verifyMessageDisplayed (driver, unpublishCategorySuccessfulMessage));
		
		log.info("VP2: The icon of the selected item is showed as 'Unpublish'");
		verifyTrue(categoryManagerPage.verifyStatusOfCategory (driver, title, Constant.ICON_UNPUBLISH));
			
	}
	
	

	@Test(description = "Verify that user can search a category  by using filter textbox")
	public void RUN_03_TC_JOOMLA_CATEGORY_008() {
		log.info("Step2: Enter valid username into Username field and valid password into Password field");
		log.info("Step3: Click on 'Log in' button");
		loginPage.loginToJoomla(driver, username, password);
		
		log.info("Step4: Select Content > Category Manager");
		categoryManagerPage.selectMenuItems2(driver, Constant.MENUITEM_CONTENT, Constant.MENUITEM_CATEGORIES);
		
		log.info("Step5: Click on 'Help' icon of the top right toolbar");
		categoryManagerPage.clickToolbarButton(driver, Constant.BUTTON_HELP);
		
		log.info("VP1: Verify the category's help window is displayed");
		verifyTrue(helpPage.verifyHelpPageDisplayed(driver, Constant.TITLE_HELP));
	}
	
	@Test(description= "Verify that user can search a category by using filter dropdown lists")
	@Parameters({"browser","ip","port"})
	public void RUN_04_TC_JOOMLA_CATEGORY_009(String browser, String ip, String port) {
					
		log.info("Step 1: Navigate to the URL: http://ltrc.automationvids.com/administrator/");
		log.info("Step 2: Enter valid username into Username field");
		log.info("Step 3: Enter valid password into Password field");
		log.info("Step 4: Click on 'Log in' button");			
		log.info("Step 5: Select Content > Category Manager");		
		log.info("Step 6: Click on 'New' icon of the top right toolbar");
		log.info("Step 7: Enter a title on 'Title' field");
		log.info("Step 8: Select an item from the 'Category' dropdown list");
		log.info("Step 9: Select 'Published' item from 'Status' dropdown list");
		log.info("Step 10: Enter value on 'Category Text' text area");
		log.info("Step 11: Click on 'Save & Close' icon of the top right toolbar");
		log.info("Step 12: Enter a title on 'Filter' text field");
		log.info("Step 13: Click on 'Search' button");
		categoryManagerPage.searchCategoryByTitle(driver, title1);
		
		log.info("VP: Verify the titles of displayed categories are partially matched with the entered keyword");
		verifyTrue(categoryManagerPage.verifyCategoryDisplayed(driver,Constant.SEARCH_STATUS_YES, title1));
		
		log.info ("Post-precondition: Delete categories that has been created");
		categoryManagerPage.deleteCategory(driver, Constant.SEARCH_STATUS_YES, title);
		categoryManagerPage.deleteCategory(driver, Constant.SEARCH_STATUS_YES, title1);
		
		log.info ("Post-precondition: Log out Joomla");
		categoryManagerPage.logoutJoomla(driver);
			
	}
	
	@AfterClass
	public void CLEAN() {
		
		closeBrowser(driver);
	}
	
	/* Initialize Objects*/
	WebDriver driver;
	LoginPageAction loginPage;
	CategoryPageAction categoryPage;
	CategoryManagerPageAction categoryManagerPage;
	JsonHelper json;
	
	/* Class Variables */
	String url = CommonActions.readDataFromXML("url");
	String username = CommonActions.readDataFromXML("user");
	String password = CommonActions.readDataFromXML("pass");

	/* Test Case Variables */
	String title = Constant.TEAM_PREFIX + CommonActions.readDataFromJson("JoomlaCategory_002", "title") + " " +CommonActions.getDateTime() + " " + CommonActions.generateRandomNumber();
	String title1 = Constant.TEAM_PREFIX + CommonActions.readDataFromJson("JoomlaCategory_002", "title1") + " " +CommonActions.getDateTime() + " " + CommonActions.generateRandomNumber();
	String category = CommonActions.readDataFromJson("JoomlaCategory_002", "category");
	String categoryText = CommonActions.readDataFromJson("JoomlaCategory_002", "categoryText");
	String publishStatus = CommonActions.readDataFromJson("JoomlaCategory_002", "publishStatus");
	String unpublishStatus = CommonActions.readDataFromJson("JoomlaCategory_002", "unpublishStatus");
	String imageFolder = CommonActions.readDataFromJson("JoomlaCategory_002", "imageFolder");
	String imageName = CommonActions.readDataFromJson("JoomlaCategory_002", "imageName");
	String createCategorySuccessfulMessage = "Category successfully saved.";
	String publishCategorySuccessfulMessage = "1 category published.";	                                           
	String unpublishCategorySuccessfulMessage = "1 category unpublished.";
	String checkinSuccessfulMessage = "1 category successfully checked in.";
}