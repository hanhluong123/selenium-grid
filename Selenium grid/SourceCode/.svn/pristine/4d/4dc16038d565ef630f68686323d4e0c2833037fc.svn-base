package category;

import org.openqa.selenium.WebDriver;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Parameters;
import org.testng.annotations.Test;

import common.AbstractTest;
import common.CommonActions;
import common.Constant;
import pages.LoginPageAction;
import pages.CategoryPageAction;
import pages.CategoryManagerPageAction;
import pages.HelpPageAction;

public class JoomlaCategory_003 extends AbstractTest {
	WebDriver driver;

	@BeforeClass
	@Parameters({ "browser", "port", "ip" })
	public void SETUP(String browser, String port, String ip) {
		driver = openBrowser(driver, browser, ip, port);
		log.info("Step1: Navigate to the URL: http://ltrc.automationvids.com/administrator/");
		navigateBrowser(driver, url);
		loginPage = new LoginPageAction(driver);
		categoryPage = new CategoryPageAction(driver);
		categoryManagerPage = new CategoryManagerPageAction(driver);
		helpPage = new HelpPageAction(driver);
	}

	@Test(description = "Verify that user can search a category  by using filter textbox")
	public void RUN_01_TC_JOOMLA_CATEGORY_008() {
		log.info("Step2: Enter valid username into Username field and valid password into Password field");
		log.info("Step3: Click on 'Log in' button");
		loginPage.loginToJoomla(driver, username, password);
		
		log.info("Step4: Select Content > Category Manager");
		categoryManagerPage.selectMenuItems2(driver, Constant.MENUITEM_CONTENT, Constant.MENUITEM_CATEGORIES);
		
		log.info("Step5: Click on 'Help' icon of the top right toolbar");
		categoryManagerPage.clickToolbarButton(driver, Constant.BUTTON_HELP);
		
		log.info("VP1: Verify the category's help window is displayed");
		verifyTrue(helpPage.verifyHelpPageDisplayed(driver, Constant.TITLE_HELP));
	}

	@Test(description = "Verify that user cannot create a new Category without entering the title of the category")
	public void RUN_02_TC_JOOMLA_CATEGORY_017() {
		log.info("Step1: Navigate to the URL: http://ltrc.automationvids.com/administrator/");
		log.info("Step2: Enter valid username into Username field and valid password into Password field");
		log.info("Step3: Click on 'Log in' button");
		log.info("Step4: Select Content > Category Manager");
		log.info("Step5: Click on 'New' icon of the top right toolbar");
		log.info("Step6: Enter a title on 'Title' field");
		log.info("Step7: Select an item from the 'Category' dropdown list");
		log.info("Step8: Enter value on 'Category Text' text area");
		log.info("Step9: Select 'Public' item from the 'Access' dropdown list");
		log.info("Step10: Click on 'Save & Close' icon of the top right toolbar");
		categoryPage.addNewCategory(driver, title, category, null, Constant.ACCESS_PUBLIC, categoryText, Constant.BUTTON_SAVEANDCLOSE);
 
		log.info("Verify the category is saved successfully");
		log.info("VP1: 'Category successfully saved' message is displayed");
		verifyTrue(categoryManagerPage.verifyMessageDisplayed(driver, expectedMessage));

		log.info("VP2: Created category is displayed on the categories table");
		verifyTrue(categoryManagerPage.verifyCategoryDisplayed(driver, Constant.SEARCH_STATUS_YES, title));

		log.info("VP3: The Access Level of the category is displayed as 'Public'");
		verifyTrue(categoryManagerPage.verifyAccessLevel(driver, title, Constant.ACCESS_PUBLIC));
	}

	@Test(description = "Verify that user can browse 'New Category help' page")
	public void RUN_03_TC_JOOMLA_CATEGORY_011() {
		log.info("Step1: Navigate to the URL: http://ltrc.automationvids.com/administrator/");
		log.info("Step2: Enter valid username into Username field and valid password into Password field");
		log.info("Step3: Click on 'Log in' button");
		log.info("Step4: Click on the Header link of ID column");
		categoryPage.click(driver, joomla.AbstractPage.btnClear);
		categoryManagerPage.sortCategoryByID(driver, Constant.SORT_ASCENDING);

		log.info("VP1: Verify the categories is sorted by ID in ascending order");
		verifyTrue(categoryManagerPage.verifySortInAscending(driver));

		log.info("Step5: Click on the Header link of ID column");
		categoryManagerPage.sortCategoryByID(driver, Constant.SORT_DESCENDING);

		log.info("VP2: Verify the categories is sorted by ID in descending order");
		verifyTrue(categoryManagerPage.verifySortInDescending(driver));
	}

	@Test(description = "Verify that user can cancel adding action while adding a new create")
	public void RUN_04_TC_JOOMLA_CATEGORY_012() {
		log.info("Step1: Navigate to the URL: http://ltrc.automationvids.com/administrator/");
		log.info("Step2: Enter valid username into Username field and valid password into Password field");
		log.info("Step3: Click on 'Log in' button");
		log.info("Step4: Select '5' item of the 'Display' dropdown list at the footer section of the category table");
		categoryManagerPage.hoverOverElement(driver, joomla.AbstractPage.btnHelp);
		categoryManagerPage.selectNumberOfCategoryDisplay(driver, numberOfItemsDisplay5);

		log.info("VP1: Verify the category table is paging into 5 categories per page");
		verifyTrue(categoryManagerPage.verifyCategoryPagingCorrectly(driver, numberOfItemsDisplay5));

		log.info("Step5: Select 'All' item of the 'Display' dropdown list at the footer section of the category table");
		categoryManagerPage.selectNumberOfCategoryDisplay(driver, numberOfItemsDisplayAll);

		log.info("VP2: All categories are displayed in one page");
		verifyTrue(categoryManagerPage.verifyCategoryPagingCorrectly(driver, numberOfItemsDisplayAll));
		
		log.info("post condition 1: Delete Category" );
		categoryManagerPage.deleteCategory(driver, Constant.SEARCH_STATUS_YES, title);
		
		log.info("post condition 2: Log out Joomla" );
		categoryManagerPage.logoutJoomla(driver);
	}

	@AfterClass
	public void CLEAN() {
		closeBrowser(driver);
	}

	/* Initialize Objects */

	LoginPageAction loginPage;
	CategoryPageAction categoryPage;
	CategoryManagerPageAction categoryManagerPage;
	HelpPageAction helpPage;

	/* Class Variables */
	String url = CommonActions.readDataFromXML("url");
	String password = CommonActions.readDataFromXML("pass");
	String username = CommonActions.readDataFromXML("user");
	String title = Constant.TEAM_PREFIX + CommonActions.readDataFromJson("JoomlaCategory_003", "title") + " " +CommonActions.getDateTime() + " " + CommonActions.generateRandomNumber();		
	String category = CommonActions.readDataFromJson("JoomlaCategory_003", "category");
	String categoryText = CommonActions.readDataFromJson("JoomlaCategory_003", "categoryText");
	String expectedMessage = CommonActions.readDataFromJson("JoomlaCategory_003", "expectedMessage");
	String numberOfItemsDisplay5 = CommonActions.readDataFromJson("JoomlaCategory_003", "numberOfItemsDisplay5");
	String numberOfItemsDisplayAll = CommonActions.readDataFromJson("JoomlaCategory_003", "numberOfItemsDisplayAll");


}
